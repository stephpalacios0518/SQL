#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer in relation to their orders and media data

#1.Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT CustomerID, FirstName, LastName, Country
FROM chinook.customers
WHERE Country <> 'USA'; 

#2.Show only the Customers from Brazil.
SELECT FirstName, LastName
FROM chinook.customers
WHERE Country= 'Brazil'; 

#3.Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT customers.FirstName, customers.LastName, invoices.InvoiceID, invoices.InvoiceDate, invoices.BillingCountry
FROM chinook.invoices AS invoices
LEFT JOIN chinook.customers AS customers
ON invoices.CustomerID=customers.CustomerID
WHERE invoices.BillingCountry= 'Brazil'; 

#4.Show the Employees who are Sales Agents.
SELECT FirstName, LastName, Title
FROM chinook.employees
WHERE Title= 'Sales Support Agent';

#5.Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT(BillingCountry)
FROM chinook.invoices
ORDER BY BillingCountry ASC;

#6.Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT employees.FirstName, employees.LastName, invoices.InvoiceId
FROM chinook.employees AS employees 
JOIN chinook.customers AS mers
ON employees.EmployeeId=mers.SupportRepId
JOIN chinook.invoices AS invoices
ON mers.CustomerId=invoices.CustomerID;

#7.Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT invoices.Total, mers.FirstName AS Customer_First_Name, mers.LastName AS Customer_Last_Name, invoices.BillingCountry, employees.FirstName AS Employee_First_Name, employees.LastName AS Employee_Last_Name
FROM chinook.invoices AS invoices
JOIN chinook.customers AS mers
ON invoices.CustomerID=mers.CustomerId
JOIN chinook.employees AS employees
ON mers.SupportRepId=employees.EmployeeId; 

#8.How many Invoices were there in 2009?
SELECT COUNT(InvoiceId) AS total_invoices
FROM chinook.invoices
WHERE InvoiceDate LIKE '2009%';

#9.What are the total sales for 2009?
SELECT SUM(Total) AS Sales_2009
FROM chinook.invoices
WHERE InvoiceDate LIKE '2009%';

#10.Write a query that includes the purchased track name with each invoice line ID.
SELECT invoice_items.InvoiceLineId, tracks.Name 
FROM chinook.invoice_items AS invoice_items
INNER JOIN chinook.tracks AS tracks 
ON invoice_items.TrackId=tracks.TrackId
ORDER BY invoice_items.InvoiceLineId; 

#11.Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT tracks.Name AS Track,artists.Name AS Artist, invoice_item.InvoiceLineId
FROM chinook.invoice_items AS invoice_item
LEFT JOIN chinook.tracks AS tracks 
ON invoice_item.TrackId=tracks.TrackId
INNER JOIN chinook.albums AS albums
ON albums.AlbumId=tracks.AlbumId
LEFT JOIN chinook.artists AS artists
ON artists.ArtistId=albums.ArtistId; 

#12.Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.Name AS Tracks, a.Title AS Albums, m.Name AS Media_Type, g.Name AS Genre
FROM chinook.tracks t
JOIN chinook.albums a
ON a.AlbumId=t.AlbumId
JOIN chinook.media_types m
ON m.MediaTypeId=t.MediaTypeId
JOIN chinook.genres AS g
ON g.GenreId=t.GenreId;

#13.Show the total sales made by each sales agent.
SELECT ROUND(SUM(inv.Total)) AS Total_Sales, emp.FirstName, emp.LastName
FROM chinook.invoices AS inv
JOIN chinook.customers AS cus
ON inv.CustomerId=cus.CustomerId
JOIN chinook.employees AS emp
ON cus.SupportRepId=emp.EmployeeId
GROUP BY emp.FirstName, emp.LastName;

#14.Which sales agent made the most dollars in sales in 2009?
SELECT ROUND(SUM(inv.Total)) AS Total, emp.FirstName, emp.LastName
FROM chinook.invoices AS inv
JOIN chinook.customers AS cus
ON inv.CustomerId=cus.CustomerId
JOIN chinook.employees AS emp
ON cus.SupportRepId=emp.EmployeeId
WHERE InvoiceDate LIKE '2009%'
GROUP BY emp.FirstName, emp.LastName
ORDER BY Total DESC 
LIMIT 1; 
